# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2019, GitExtensions
# This file is distributed under the same license as the GitExtensions package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GitExtensions 4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-11 22:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../settings.rst:4
msgid "Settings"
msgstr ""

#: ../settings.rst:6
msgid "The settings dialog can be invoked at any time by selecting ``Settings`` from the ``Tools`` menu option."
msgstr ""

#: ../settings.rst:9
msgid "Git Extensions"
msgstr ""

#: ../settings.rst:11
msgid "The top level page has a checklist for settings in Git and Git Extensions."
msgstr ""

#: ../settings.rst:15
msgid "The following buttons are always available on any page of the Settings dialog. Sometimes the ``Cancel`` button has no effect for the page - this will be noted on the page in the area next to the buttons."
msgstr ""

#: ../settings.rst:22
msgid "Button"
msgstr ""

#: ../settings.rst:23
msgid "Description"
msgstr ""

#: ../settings.rst:24
msgid "``OK``"
msgstr ""

#: ../settings.rst:25
msgid "Save any entered changes made in *any* settings page and close the Settings dialog."
msgstr ""

#: ../settings.rst:26
msgid "``Cancel``"
msgstr ""

#: ../settings.rst:27
msgid "Any entered changes in *any* settings page are *not* saved. The Settings dialog is closed."
msgstr ""

#: ../settings.rst:28
msgid "``Apply``"
msgstr ""

#: ../settings.rst:29
msgid "Any entered changes in *any* settings page are saved."
msgstr ""

#: ../settings.rst:31
msgid "Settings that are specific to Git Extensions and apply globally will be stored in a file called ``GitExtensions.settings`` either in the user's application data path or with the program. The location is dependent on the IsPortable setting in the ``GitExtensions.exe.config`` file that is with the program. Settings that are specific to Git Extensions but apply to only the current repository will be stored in a file of the same name, ``GitExtensions.settings``, but in either the root folder of the repository or the ``.git`` folder of the repository, depending on whether or not they are distributed with that repository."
msgstr ""

#: ../settings.rst:38
msgid "This page is a visual overview of the minimal settings that Git Extensions requires to work properly. Any items highlighted in red should be configured by clicking on the highlighted item."
msgstr ""

#: ../settings.rst:41
msgid "This page contains the following settings and buttons."
msgstr ""

#: ../settings.rst:45
msgid "Forces Git Extensions to re-check the minimal set of required settings the next time Git Extensions is started. If all settings are 'green' this will be automatically unchecked."
msgstr ""

#: ../settings.rst:50
msgid "Saves any setting changes made and re-checks the settings to see if the minimal requirements are now met."
msgstr ""

#: ../settings.rst:53
msgid "general"
msgstr ""

#: ../settings.rst:54
msgid "This page contains general settings for Git Extensions."
msgstr ""

#: ../settings.rst:61
msgid "When enabled, the number of pending commits are shown on the toolbar as a figure in parentheses on the Commit button. Git Extensions must be stopped and restarted to activate changes to this option. Turn this (and next) off if you experience slowdowns."
msgstr ""

#: ../settings.rst:68
msgid "If artificial commits are enabled in the revision graph, show the pending commits as well as a tool tip with a summary of changes."
msgstr ""

#: ../settings.rst:72
msgid "Show the status for submodules (as well as supermodules) in the dropdown menu in Browse. The status is updated if :ref:`settings-performance-show-number-of-changed-files-for-artificial-commits` is enabled and the number of artificial commits is updated. (Changes in supermodules are not monitored)."
msgstr ""

#: ../settings.rst:79
msgid "When you use the stash a lot, it can be useful to show the number of stashed items on the toolbar. This option is turned off by default."
msgstr ""

#: ../settings.rst:84
msgid "If the current local checkout branch is tracking a remote branch, show the number of commits the branch is ahead (changed locally) and behind (changed on the remote) on the status bar in :ref:`browse-main-toolbar` and for branches on the :ref:`browse-side-panel`."
msgstr ""

#: ../settings.rst:91
msgid "Git Extensions will not allow you to checkout a branch if you have uncommitted changes on the current branch. If you select this option, Git Extensions will display a dialog where you can decide what to do with uncommitted changes before swapping branches."
msgstr ""

#: ../settings.rst:98
msgid "This number specifies the maximum number of commits that Git Extensions will load when it is started. These commits are shown in the Revision Graph window. To see more commits, then this setting will need to be adjusted and Git Extensions restarted."
msgstr ""

#: ../settings.rst:107
msgid "When a process is finished, close the process dialog automatically. Leave this option off if you want to see the result of processes. When a process has failed, the dialog will automatically remain open."
msgstr ""

#: ../settings.rst:114
msgid "Git Extensions uses command line tools to access the git repository. In some environments it might be useful to see the command line dialog when a process is executed. An option on the command line dialog window displayed allows this setting to be turned off."
msgstr ""

#: ../settings.rst:121
msgid "Use the Git ‘histogram diff’ algorithm instead of the default. This algorithm is useful in situations where two files have diverged significantly and the default algorithm may become ‘misaligned’, resulting in a totally unusable conflict file."
msgstr ""

#: ../settings.rst:128
msgid "If checked, when a stash is performed as a result of any action except a manual stash request, e.g. checking out a new branch and requesting a stash then any files not tracked by git will also be saved to the stash."
msgstr ""

#: ../settings.rst:133
msgid "Update the commits for submodules when updating the commit for the current repository."
msgstr ""

#: ../settings.rst:138
msgid "Try to follow file renames in the file history."
msgstr ""

#: ../settings.rst:143
msgid "Follow file renames and copies for which similarity index is 100%. That is when a file is renamed or copied and is committed with no changes made to its content."
msgstr ""

#: ../settings.rst:149
msgid "When starting Git Extensions, open the last used repository (bypassing the Dashboard)."
msgstr ""

#: ../settings.rst:154
msgid "Git Extensions will pre-fill destination directory input with value of this setting on any form used to perform repository clone."
msgstr ""

#: ../settings.rst:158
msgid "The default action for `Pull` in :ref:`browse-main-toolbar`, see the dropdown list."
msgstr ""

#: ../settings.rst:163
msgid "The timeout (milliseconds) used for the quick search feature in the revision graph. The quick search will be enabled when you start typing and the revision graph has the focus."
msgstr ""

#: ../settings.rst:170
msgid "Allow that Git Extensions collect anonymous information about usage."
msgstr ""

#: ../settings.rst:175
msgid "appearance"
msgstr ""

#: ../settings.rst:174
msgid "This page contains settings that affect the appearance of the application."
msgstr ""

#: ../settings.rst:181
msgid "Show relative date, e.g. 2 weeks ago, instead of full date. Displayed on the ``commit`` tab on the main Revision Graph window."
msgstr ""

#: ../settings.rst:186
msgid "Also show the branch in :ref:`browse-side-panel`."
msgstr ""

#: ../settings.rst:191
msgid "Determines whether or not the currently checked out branch is displayed on the Git Extensions toolbar within Visual Studio."
msgstr ""

#: ../settings.rst:197
msgid "Automatically resize controls and their contents according to the current system resolution of the display, measured in dots per inch (DPI)."
msgstr ""

#: ../settings.rst:202
msgid "This setting causes commits in the revision grid to be sorted by Git default (commit date), author date or topology. Sorting by other than Git default may delay rendering of the revision graph."
msgstr ""

#: ../settings.rst:208
msgid "The sort order for branches in :ref:`browse-main-toolbar` and :ref:`browse-side-panel` in a dropdown."
msgstr ""

#: ../settings.rst:212
msgid "Order the branches within the sorting in :ref:`settings-general-sort-branches-by`."
msgstr ""

#: ../settings.rst:217
msgid "This setting affects the display of filenames in a component of a window e.g. in the Diff tab of the Revision Graph window. The options that can be selected are:"
msgstr ""

#: ../settings.rst:221
msgid "``None`` - no truncation occurs; a horizontal scroll bar is used to see the whole filename."
msgstr ""

#: ../settings.rst:222
msgid "``Compact`` - no horizontal scroll bar. Filenames are truncated at both start and end to fit into the width of the display component."
msgstr ""

#: ../settings.rst:223
msgid "``Trimstart`` - no horizontal scroll bar. Filenames are truncated at the start only."
msgstr ""

#: ../settings.rst:224
msgid "``FileNameOnly`` - the path is always removed, leaving only the name of the file, even if there is space for the path."
msgstr ""

#: ../settings.rst:232
msgid "If checked, avatar images are downloaded for commit authors and shown in the revision grid."
msgstr ""

#: ../settings.rst:237
msgid "If checked, avatar images are downloaded for commit authors and shown in the commit info view."
msgstr ""

#: ../settings.rst:242
msgid "The number of days to elapse before the avatar image source is checked for any changes to an authors image."
msgstr ""

#: ../settings.rst:247
msgid "The avatar provider setting determines the source from which avatar images are requested."
msgstr ""

#: ../settings.rst:249
msgid "``Default`` - The default avatar provider loads a user defined avatar images, depending on the email address, from GitHub or Gravatar. If no user defined image could be found, a fallback images is used."
msgstr ""

#: ../settings.rst:251
msgid "``None`` - If selected, no user-defined images are loaded and the fallback is evaluated immediately."
msgstr ""

#: ../settings.rst:252
msgid "``Custom`` - An advanced mode that allows you to set one or more custom avatar provider services (e.g. Libravatar) by providing URL templates."
msgstr ""

#: ../settings.rst:255
msgid "URL Template Syntax"
msgstr ""

#: ../settings.rst:257
msgid "The URL template syntax consists of regular URLs to avatar images, that can be enriched with variables, which are substituted before evaluation. Those variables are encoded using curly brackets ``{}`` and can be used like this: ``https://example.avatar.service/u/{email}/avatar.png``. If a request fails (http 400 and 500 errors) or does not provide a valid image, the next URL is used. More URLs can be specified by chaining them together with semicolons (\";\") like so: ``http://provider1.com/{sha1}.png;http://provider2.com/{sha1}.png``. If all custom URLs fail to provide an avatar image, the applications internal fallback mechanism will provide one for that user. The variable names are case insensitive. If a variable is not found (for example because of typo or it does not exist), it is substituted with an empty string, so the resulting URL never contains the curly brackets."
msgstr ""

#: ../settings.rst:265
msgid "The following variables are currently supported:"
msgstr ""

#: ../settings.rst:267
msgid "``name`` - The name of the commit author (git config ``user.name``). Special characters are URL encoded."
msgstr ""

#: ../settings.rst:268
msgid "``email`` - The email address of the commit author (git config ``user.email``). Special characters are URL encoded."
msgstr ""

#: ../settings.rst:269
msgid "``md5`` - A lowercase hex representation of the MD5 hash of the normalized (all characters lowercase) email address (without URL encoding). This hash is compatible with Gravatar and thus compatible with a lot of similar services."
msgstr ""

#: ../settings.rst:270
msgid "``sha1`` - Like the ``md5`` variable but with SHA1 as hash algorithm."
msgstr ""

#: ../settings.rst:271
msgid "``sha256`` - Like the ``md5`` variable but with SHA256 as hash algorithm."
msgstr ""

#: ../settings.rst:272
msgid "``imagesize`` - Represents the requested avatar size in pixels."
msgstr ""

#: ../settings.rst:274
msgid "A complete working configuration might look something like this: ``https://www.libravatar.org/avatar/{md5}?s={imageSize}&default=404;https://avatar.tobi.sh/{md5}?size={imageSize}``"
msgstr ""

#: ../settings.rst:280
msgid "The configured fallback determines how authors without a user-defined avatar are presented. Besides ``Author Initials`` all other options are provided by Gravatar. Details about their fallback modes can be found here https://en.gravatar.com/site/implement/images/ in the section \"Default Image\". ``Author Initials`` are generated by the application internally and require no network connection to be displayed."
msgstr ""

#: ../settings.rst:286
msgid "Clear the cached avatars."
msgstr ""

#: ../settings.rst:293
msgid "Choose the language for the Git Extensions interface."
msgstr ""

#: ../settings.rst:298
msgid "Choose the dictionary to use for the spelling checker in the Commit dialog."
msgstr ""

#: ../settings.rst:303
msgid "colors"
msgstr ""

#: ../settings.rst:302
msgid "This page contains settings to define the colors used in the application."
msgstr ""

#: ../settings.rst:308
msgid "Displays branch commits in different colors if checked. If unchecked, all branches are shown in the same color. This color can be selected."
msgstr ""

#: ../settings.rst:314
msgid "Alternate background colour for revision rows."
msgstr ""

#: ../settings.rst:318
msgid "Show commit history in gray for branches not related to the current branch."
msgstr ""

#: ../settings.rst:322
msgid "Show commit text in gray for branches not related to the current branch."
msgstr ""

#: ../settings.rst:326
msgid "Highlight revisions committed by the same author as the selected revision."
msgstr ""

#: ../settings.rst:330
msgid "Fill labels in the revision grid."
msgstr ""

#: ../settings.rst:334
msgid "Git Extensions allows that some application colors are changed. A few themes are included."
msgstr ""

#: ../settings.rst:337
msgid "For more information see the README in the themes folder or `GitHub <https://github.com/gitextensions/gitextensions/blob/master/GitUI/Themes/README.md>`_."
msgstr ""

#: ../settings.rst:341
msgid "Open the folder with the themes in Windows Explorer."
msgstr ""

#: ../settings.rst:345
msgid "Adjust the theme colors for colorblind users (if specified in the theme)."
msgstr ""

#: ../settings.rst:349
msgid "Use a the system wide visual style (will not look good with all themes)."
msgstr ""

#: ../settings.rst:371
msgid "fonts"
msgstr ""

#: ../settings.rst:357
msgid "The font used for the display of file contents."
msgstr ""

#: ../settings.rst:362
msgid "The font used on Git Extensions windows and dialogs."
msgstr ""

#: ../settings.rst:366
msgid "The font used for entering a commit message in the Commit dialog."
msgstr ""

#: ../settings.rst:370
msgid "The font used for the commit id in the revision graph."
msgstr ""

#: ../settings.rst:385
msgid "console-style"
msgstr ""

#: ../settings.rst:374
msgid "Settings for the ConEmu console tab."
msgstr ""

#: ../settings.rst:380
msgid "Choose one of the predefined ConEmu schemes. See http://conemu.github.io/en/SettingsColors.html."
msgstr ""

#: ../settings.rst:384
msgid "Console font size."
msgstr ""

#: ../settings.rst:467
msgid "revision-links"
msgstr ""

#: ../settings.rst:388
msgid "You can configure here how to convert parts of a revision data into clickable links. These links will be located under the commit message on the ``Commit`` tab in the ``Related links`` section."
msgstr ""

#: ../settings.rst:393
msgid "The most common case is to convert an issue number given as a part of commit message into a link to the coresponding issue-tracker page. The screenshot below shows an example configuration for GitHub issues. You could add this quite generic `GitExtensions.settings <https://github.com/gitextensions/GitExtensionsDoc/blob/master/source/files/settings/GitExtensions.settings>`_ file to the root of your repository."
msgstr ""

#: ../settings.rst:403
msgid "Lists all the currently defined Categories. Click the ``Add`` button to add a new empty Category. The default name is 'new'.  To remove a Category select it and click the ``Remove`` button."
msgstr ""

#: ../settings.rst:409
msgid "This is the Category name used to match the same categories defined on different levels of the Settings."
msgstr ""

#: ../settings.rst:414
msgid "Indicates whether the Category is enabled or not. Disabled categories are skipped while creating links."
msgstr ""

#: ../settings.rst:419
msgid "It is possible to use data from remote's URL to build a link. This way, links can be defined globally for all repositories sharing the same URL schema."
msgstr ""

#: ../settings.rst:423
msgid "Regex to filter which remotes to use. Leave blank to create links not depending on remotes. If full names of remotes are given then matching remotes are sorted by its position in the given Regex."
msgstr ""

#: ../settings.rst:429
msgid "Check if you want to create links only for the first matching remote."
msgstr ""

#: ../settings.rst:433
msgid "Define whether to search in ``URL``, ``Push URL`` or both."
msgstr ""

#: ../settings.rst:439
msgid "Define which parts of the revision should be searched for matches."
msgstr ""

#: ../settings.rst:441
msgid "Note that the branch name is only searchable in the branch heads."
msgstr ""

#: ../settings.rst:446
msgid "Regular expression used for matching text in the chosen revision parts. Each matched fragment will be used to create a new link. More than one fragment can be used in a single link by using a capturing group. Matches from the Remote data group go before matches from the Revision data group. A capturing group value can be passed to a link by using zero-based indexed placeholders in a link format definition e.g. {0}."
msgstr ""

#: ../settings.rst:455
msgid "``Nested pattern`` can be used when only a part of the text matched by the :ref:`settings-revision-links-revision-data-search-pattern` should be used to format a link. When the ``Nested pattern`` is empty, matches found by the :ref:`settings-revision-links-revision-data-search-pattern` are used to create links."
msgstr ""

#: ../settings.rst:462
msgid "List of links to be created from a single match. Each link consists of the ``Caption`` to be displayed and the ``URI`` to be opened when the link is clicked on. In addition to the standard zero-based indexed placeholders, the ``%COMMIT_HASH%`` placeholder can be used to put the commit's hash into the link. For example: ``https://github.com/gitextensions/gitextensions/commit/%COMMIT_HASH%``"
msgstr ""

#: ../settings.rst:485
msgid "build-server-integration"
msgstr ""

#: ../settings.rst:470
msgid "This page allows you to configure the integration with build servers. This allows the build status of each commit to be displayed directly in the revision log, as well as providing a tab for direct access to the Build Server build report for the selected commit."
msgstr ""

#: ../settings.rst:476
msgid "Check to globally enable/disable the integration functionality."
msgstr ""

#: ../settings.rst:480
msgid "Show a page with build information in :ref:`browse-tabs`."
msgstr ""

#: ../settings.rst:484
msgid "Select an integration target."
msgstr ""

#: ../settings.rst:490
msgid "AppVeyor account name. You don't have to enter it if the projects you want to query for build status are public."
msgstr ""

#: ../settings.rst:494
msgid "AppVeyor API token. Required if the :ref:`settings-appveyor-account-name` is entered. See https://ci.appveyor.com/api-token"
msgstr ""

#: ../settings.rst:499
msgid "Projects names separated with '|', e.g. `gitextensions/gitextensions|jbialobr/gitextensions`"
msgstr ""

#: ../settings.rst:503
msgid "Include tests results in the build status summary for every build result."
msgstr ""

#: ../settings.rst:509
#: ../settings.rst:523
#: ../settings.rst:537
msgid "Enter the URL of the server (and port, if applicable)."
msgstr ""

#: ../settings.rst:513
msgid "Limit the builds if desired."
msgstr ""

#: ../settings.rst:517
msgid "Read token for the build server."
msgstr ""

#: ../settings.rst:527
msgid "Enter the name of the project which tracks this repository in Jenkins. Separate project names with \"|\". Multi-branch pipeline projects are supported by adding \"?m\" to the project name."
msgstr ""

#: ../settings.rst:531
msgid "The plugin will normally display the last build for a certain commit. If Jenkins starts several builds for one commit, it is possible to ignore the non interesting builds if all builds are not interesting."
msgstr ""

#: ../settings.rst:541
msgid "Enter the name of the project which tracks this repository in TeamCity. Multiple project names can be entered separated by the | character."
msgstr ""

#: ../settings.rst:545
msgid "Enter a regexp filter for which build results you want to retrieve in the case that your build project creates multiple builds. For example, if your project includes both devBuild and docBuild you may wish to apply a filter of “devBuild” to retrieve the results from only the program build."
msgstr ""

#: ../settings.rst:625
msgid "scripts"
msgstr ""

#: ../settings.rst:549
msgid "This page allows you to configure specific commands to run before/after Git actions or to add a new command to the User Menu. The top half of the page summarises all of the scripts currently defined. If a script is selected from the summary, the bottom half of the page will allow modifications to the script definition. A hotkey can also be assigned to execute a specific script. See :ref:`settings-hotkeys`."
msgstr ""

#: ../settings.rst:556
msgid "Adds a new script. Complete the details in the bottom half of the screen."
msgstr ""

#: ../settings.rst:560
msgid "Removes a script."
msgstr ""

#: ../settings.rst:564
msgid "Changes order of scripts."
msgstr ""

#: ../settings.rst:570
msgid "The name of the script."
msgstr ""

#: ../settings.rst:574
msgid "If checked, the script is active and will be performed at the appropriate time (as determined by the On Event setting)."
msgstr ""

#: ../settings.rst:578
msgid "Enter the command to be run. This can be any command that your system can run e.g. an executable program, a .bat script, a Python command, etc. Use the ``Browse`` button to find the command to run. There are some special prefixes which change the way the script is executed:"
msgstr ""

#: ../settings.rst:582
msgid "``plugin:<plugin-name>``: Where ``<plugin-name>`` is the name of a *plugin* (refer :ref:`plugins`). If a plugin with that name is found, it is run."
msgstr ""

#: ../settings.rst:584
msgid "``navigateTo:<script-path>``: Where ``<script-path>`` is the path to a file containing the script to run. That script is expected to return a commit hash as the first line of its output. The UI will navigate to that commit once the script completes."
msgstr ""

#: ../settings.rst:589
msgid "Enter any arguments to be passed to the command that is run. The ``Help`` button displays items that will be resolved by Git Extensions before executing the command e.g. {cBranch} will resolve to the currently checked out branch, {UserInput} will display a popup where you can enter data to be passed to the command when it is run."
msgstr ""

#: ../settings.rst:596
msgid "Select when this command will be executed, either before/after certain Git commands, or displayed on the User Menu bar. Since the git pull command includes a fetch, before/after fetch events are triggered on pure fetches as well as on pulls. For the pull command the script execution order ist BeforePull - BeforeFetch - git pull - AfterFetch - AfterPull."
msgstr ""

#: ../settings.rst:601
msgid "Select an icon to be displayed in a menu item when the script is marked to be shown in the user menu bar."
msgstr ""

#: ../settings.rst:607
msgid "If checked, then a popup window is displayed just before the script is run to confirm whether or not the script is to be run. Note that this popup is *not* displayed when the script is added as a command to the User Menu (On Event setting is ShowInUserMenuBar)."
msgstr ""

#: ../settings.rst:612
msgid "If checked, the script will run in the background and Git Extensions will return to your control without waiting for the script to finish."
msgstr ""

#: ../settings.rst:616
msgid "If checked, the command is started through a powershell.exe process. If the :ref:`settings-scripts-script-behavior-run-in-background` is checked, the powershell console is closed after finishing. If not, the powershell console is left for the user to close it manually."
msgstr ""

#: ../settings.rst:624
msgid "If checked, the script is added to the context menu that is displayed when right-clicking on a line in the Revision Graph page."
msgstr ""

#: ../settings.rst:660
msgid "hotkeys"
msgstr ""

#: ../settings.rst:628
msgid "This page allows you to define keyboard shortcuts to actions when specific pages of Git Extensions are displayed. The HotKeyable Items identifies a page within Git Extensions. Selecting a Hotkeyable Item displays the list of commands on that page that can have a hotkey associated with them. The Hotkeyable Items consist of the following pages"
msgstr ""

#: ../settings.rst:633
msgid "Commit: The page displayed when a Commit is requested via the ``Commit`` User Menu button or the ``Commands/Commit`` menu option."
msgstr ""

#: ../settings.rst:634
msgid "Browse: The Revision Graph page (the page displayed after a repository is selected from the dashboard (Start Page))."
msgstr ""

#: ../settings.rst:635
msgid "LeftPanel: The left side panel for ``Browse`` with branches etc."
msgstr ""

#: ../settings.rst:636
msgid "RevisionGrid: The list of commits in Browse and other forms."
msgstr ""

#: ../settings.rst:637
msgid "FileViewer: The page displayed when viewing the contents of a file."
msgstr ""

#: ../settings.rst:638
msgid "FormMergeConflicts: The page displayed when merge conflicts are detected that need correcting."
msgstr ""

#: ../settings.rst:639
msgid "BrowseDiff: Diff tab in Browse."
msgstr ""

#: ../settings.rst:640
msgid "RevisionFileTree: The FileTree tab in Browse."
msgstr ""

#: ../settings.rst:641
msgid "Stash"
msgstr ""

#: ../settings.rst:642
msgid "Scripts: Shows scripts defined in Git Extensions and allows shortcuts to be assigned. Refer :ref:`settings-scripts`."
msgstr ""

#: ../settings.rst:646
msgid "After selecting a Hotkeyable Item and the Command, the current keyboard shortcut associated with the command is displayed here. To alter this shortcut, click in the box where the current hotkey is shown and press the new keyboard combination."
msgstr ""

#: ../settings.rst:651
msgid "Click to apply the new keyboard combination to the currently selected Command."
msgstr ""

#: ../settings.rst:655
msgid "Sets the keyboard shortcut for the currently selected Command to 'None'."
msgstr ""

#: ../settings.rst:659
msgid "Resets all keyboard shortcuts to the defaults (i.e. the values when Git Extensions was first installed)."
msgstr ""

#: ../settings.rst:662
msgid "shell-extension"
msgstr ""

#: ../settings.rst:663
msgid "When installed, Git Extensions adds items to the context menu when a file/folder is right-clicked within Windows Explorer. One of these items is ``Git Extensions`` from which a further (cascaded) menu can be opened. This settings page determines which items will appear on that cascaded menu and which will appear in the main context menu. Items that are checked will appear in the cascaded menu."
msgstr ""

#: ../settings.rst:668
msgid "To the right side of the list of check boxes is a preview that shows you how the Git Extensions menu items will be arranged with your current choices."
msgstr ""

#: ../settings.rst:671
msgid "By default, what is displayed in the context menu also depends on what item is right-clicked in Windows Explorer; a file or a folder (and whether the folder is a Git repository or not). If you want Git Extensions to always include all of its context menu items, check the box ``Always show all commands``."
msgstr ""

#: ../settings.rst:676
#: ../settings.rst:1230
msgid "advanced"
msgstr ""

#: ../settings.rst:677
msgid "This page allows advanced settings to be modified. Refer :ref:`settings-confirm-actions`."
msgstr ""

#: ../settings.rst:684
msgid "Always show the Checkout Branch dialog when swapping branches. This dialog is normally only shown when uncommitted changes exist on the current branch"
msgstr ""

#: ../settings.rst:690
msgid "This setting works in conjunction with the 'Git Extensions/Check for uncommitted changes in checkout branch dialog' setting. If the 'Check for uncommitted changes' setting is checked, then the Checkout Branch dialog is shown only if this setting is unchecked. If this setting is checked, then no dialog is shown and the last chosen action is used."
msgstr ""

#: ../settings.rst:698
msgid "In the Pull, Merge and Rebase dialogs, images are displayed by default to explain what happens with the branches and their commits and the meaning of LOCAL, BASE and REMOTE (for resolving merge conflicts) in different merge or rebase scenarios. If checked, these Help images will not be displayed."
msgstr ""

#: ../settings.rst:704
msgid "In the Push, Merge and Rebase dialogs, advanced options are hidden by default and shown only after you click a link or checkbox. If this setting is checked then these options are always shown on those dialogs."
msgstr ""

#: ../settings.rst:709
msgid "Using Console Emulator for console output in command dialogs may be useful the running command requires an user input, e.g. push, pull using ssh, confirming gc."
msgstr ""

#: ../settings.rst:714
msgid "Controls whether branch name should be automatically normalized as per git branch naming rules. If checked, any illegal symbols will be replaced with the replacement symbol of your choice."
msgstr ""

#: ../settings.rst:721
msgid "In the Commit dialog, users can commit and push changes with one click. However, if changes are meant to amend an already pushed commit, a standard push action will be rejected by the remote server. If this option is checked, a push action with ``--force-with-lease`` switch will be performed instead. The ``--force-with-lease`` switch will be added only when the ``Amend`` option is checked."
msgstr ""

#: ../settings.rst:730
msgid "Check for newer version every week."
msgstr ""

#: ../settings.rst:734
msgid "Include release candidate versions when checking for a newer version."
msgstr ""

#: ../settings.rst:737
msgid "confirmations"
msgstr ""

#: ../settings.rst:738
msgid "This page allows you to turn off certain confirmation popup windows by unchecking the checkboxes."
msgstr ""

#: ../settings.rst:746
msgid "Display the popup warning about the rewriting of history when you have elected to amend the last committed change."
msgstr ""

#: ../settings.rst:751
msgid "Display the warning when undoing (resetting) the commit for the current branch in :ref:`browse-main-toolbar`."
msgstr ""

#: ../settings.rst:755
msgid "When committing changes and there is no branch currently being checked out, then GitExtensions warns you and proposes to checkout or create a branch."
msgstr ""

#: ../settings.rst:760
msgid "Rebase context menu command popup in revision graph."
msgstr ""

#: ../settings.rst:766
msgid "Browse fetch/prune popup."
msgstr ""

#: ../settings.rst:770
msgid "Warning when pushing a new branch that does not exist on the remote repository."
msgstr ""

#: ../settings.rst:774
msgid "Warning when you push a local branch to a remote and it doesn’t have a tracking reference, you are asked to confirm whether you want to add such a reference. If this setting is unchecked, a tracking reference will always be added if it does not exist."
msgstr ""

#: ../settings.rst:780
msgid "Display the warning when deleting a branch that has not been merged to the current branch (use `--force`)."
msgstr ""

#: ../settings.rst:786
msgid "In the Pull dialog, if ``Auto stash`` is checked, then any changes will be stashed before the pull is performed. Any stashed changes are then re-applied after the pull is complete. If this setting is unchecked, the stashed changes are applied with no confirmation popup."
msgstr ""

#: ../settings.rst:792
msgid "In the Checkout Branch dialog, if ``Stash`` is checked, then any changes will be stashed before the branch is checked out. If this setting is unchecked, then the stashed changes will be automatically re-applied after successful checkout of the branch with no confirmation popup."
msgstr ""

#: ../settings.rst:798
msgid "Popup when dropping a stash."
msgstr ""

#: ../settings.rst:804
msgid "If unchecked, then when conflicts are detected GitExtensions will start the Resolve conflicts dialog automatically without any prompt."
msgstr ""

#: ../settings.rst:809
msgid "Uncheck this option to start the Commit dialog automatically after all conflicts have been resolved."
msgstr ""

#: ../settings.rst:813
msgid "When aborting a merge, rebase or any other operation that caused conflicts to be resolved, an user is warned about the consequences of aborting and is asked if he/she wants to continue. If the user chooses to continue the aborting operation, then he/she is asked for the second time if he/she is sure that he/she wants to abort. Uncheck this option to skip this second confirmation."
msgstr ""

#: ../settings.rst:822
msgid "When you check out a branch from a repository that has submodules, you will be asked to update the submodules. If this setting is not checked, the submodules will be updated without asking."
msgstr ""

#: ../settings.rst:830
msgid "Switch worktree popup."
msgstr ""

#: ../settings.rst:833
msgid "detailed"
msgstr ""

#: ../settings.rst:834
msgid "This page allows detailed settings to be modified."
msgstr ""

#: ../settings.rst:840
msgid "Git caches locally remote data. This data is updated each time a fetch operation is performed. For a better performance GitExtensions uses the locally cached remote data to fill out controls on the Push dialog. Enable this option if you want GitExtensions to use remote data received directly from the remote server."
msgstr ""

#: ../settings.rst:849
msgid "If enabled, then in addition to branch names, git will populate the log message with one-line descriptions from at most the given number actual commits that are being merged. See `Git merge <https://git-scm.com/docs/git-merge#Documentation/git-merge.txt---logltngt>`_."
msgstr ""

#: ../settings.rst:859
msgid "SMTP server to use for sending patches."
msgstr ""

#: ../settings.rst:863
msgid "SMTP port number to use."
msgstr ""

#: ../settings.rst:868
msgid "Check this box if the SMTP server uses SSL or TLS."
msgstr ""

#: ../settings.rst:871
msgid "browse-repository-window"
msgstr ""

#: ../settings.rst:876
msgid "Choose one of the predefined terminals in ``Console`` tab and browser popup."
msgstr ""

#: ../settings.rst:880
msgid "Open file history in :ref:`browse-repository` window instead of the deprecated :ref:`file-history` window."
msgstr ""

#: ../settings.rst:886
msgid "Show the Console tab in the :ref:`browse-repository` window."
msgstr ""

#: ../settings.rst:890
msgid "Show tab for GPG information if available."
msgstr ""

#: ../settings.rst:893
msgid "commit-dialog"
msgstr ""

#: ../settings.rst:894
msgid "This page contains settings for the Git Extensions :ref:`commit` dialog. Note that the dialog itself has further options."
msgstr ""

#: ../settings.rst:900
msgid "Enables auto-completion in commit dialog message box. Auto-completion words are taken from the changed files shown by the commit dialog. For each file type there can be configured a regular expression that decides which words should be considered as candidates for auto-completion. The default regular expressions included with Git Extensions can be found here: https://github.com/gitextensions/gitextensions/blob/master/GitExtensions/AutoCompleteRegexes.txt You can override the default regular expressions by creating an AutoCompleteRegexes.txt file in the Git Extensions installation directory."
msgstr ""

#: ../settings.rst:911
msgid "If an error occurs when files are staged (in the Commit dialog), then the process dialog showing the results of the git command is shown if this setting is checked."
msgstr ""

#: ../settings.rst:917
msgid "Enforces the second line of a commit message to be blank."
msgstr ""

#: ../settings.rst:922
msgid "If this is unchecked, then commit messages cannot be entered in the commit dialog. When the ``Commit`` button is clicked, a new editor window is opened where the commit message can be entered."
msgstr ""

#: ../settings.rst:928
msgid "The number of commit messages, from the top of the current branch, that will be made available from the ``Commit message`` combo box on the Commit dialog."
msgstr ""

#: ../settings.rst:934
msgid "Remembers the state of the 'Amend commit' checkbox when the 'Commit dialog' is being closed. The remembered state will be restored on the next 'Commit dialog' creation. The 'Amend commit' checkbox is being unchecked after each commit. So, when the 'Commit dialog' is being closed automatically after commiting changes, the 'Amend commit' checkbox is going to be unchecked first and its state will be saved after that. Therefore the checked state is remembered only if the 'Commit dialog' is being closed by an user without commiting changes."
msgstr ""

#: ../settings.rst:945
msgid "Tick the boxes in this sub-group for any of the additional buttons that you wish to have available below the commit button. These buttons are considered additional to basic functionality and have consequences if you should click them accidentally, including resetting unrecorded work."
msgstr ""

#: ../settings.rst:1058
msgid "diff-viewer"
msgstr ""

#: ../settings.rst:954
msgid "Remember in the GitExtensions settings the latest chosen value of the 'Ignore whitespaces' preference. Use the remembered value the next time GitExtensions is opened."
msgstr ""

#: ../settings.rst:959
msgid "Remember in the GitExtensions settings the latest chosen value of the 'Show nonprinting characters' preference. Use the remembered value the next time GitExtensions is opened."
msgstr ""

#: ../settings.rst:964
msgid "Remember in the GitExtensions settings the latest chosen value of the 'Show entire file' preference. Use the remembered value the next time GitExtensions is opened."
msgstr ""

#: ../settings.rst:969
#: ../settings.rst:974
msgid "Remember in the GitExtensions settings the latest chosen value of the 'Number of context lines' preference. Use the remembered value the next time GitExtensions is opened."
msgstr ""

#: ../settings.rst:979
msgid "Includes git `--cc` switch when generating a diff. See `git diff-tree <https://git-scm.com/docs/git-diff-tree#Documentation/git-diff-tree.txt---cc>`"
msgstr ""

#: ../settings.rst:983
msgid "For file status lists like in :ref:`browse-tabs-diff` and :ref:`commit` it is possible to scroll continuously to the next (or previous) file with the mouse wheel and `ALT` button. This setting allows scrolling to the next file with only the mouse wheel."
msgstr ""

#: ../settings.rst:988
msgid "If enabled then double clicking on a submodule in the Diff file list opens a new instance of GitExtensions with the submodule as the selected repository. If disabled, the File history window is opened for the double clicked submodule."
msgstr ""

#: ../settings.rst:994
msgid "The :ref:`browse-tabs-diff` can show more than one diff, depending on the selections in :ref:`browse-revision-graph`."
msgstr ""

#: ../settings.rst:996
msgid "For a single selected commit, show the difference with its parent commit."
msgstr ""

#: ../settings.rst:997
msgid "For a single selected merge commit, show the difference with all parents."
msgstr ""

#: ../settings.rst:998
msgid "For two selected commits with a common ancestor (BASE) or two *ranges* described below, show the difference between the commits as well as the difference from BASE to the commits. See below for more details about icons and range diffs."
msgstr ""

#: ../settings.rst:1001
msgid "For multiple selected commits (up to four), show the difference for all the first selected with the last selected commit."
msgstr ""

#: ../settings.rst:1003
msgid "For more than four selected commits, show the difference from the first to the last selected commit."
msgstr ""

#: ../settings.rst:1008
msgid "If the selected commits have a common BASE, the icons in the file list has an overlay on the icon with information where the file has been changed."
msgstr ""

#: ../settings.rst:1011
msgid "`A` Change done in first (A) commit."
msgstr ""

#: ../settings.rst:1012
msgid "`B` Change done in selected (B) commit. (Last selected commit.)"
msgstr ""

#: ../settings.rst:1013
msgid "`=` Same change in both commits."
msgstr ""

#: ../settings.rst:1014
msgid "`!` Unequal changes are done in the commits."
msgstr ""

#: ../settings.rst:1020
msgid "`Git range-diff <https://git-scm.com/docs/git-range-diff>` shows the difference between two versions of a patch series with a common BASE. The command can require a lot of resources and it is possible to define the ranges for Git ."
msgstr ""

#: ../settings.rst:1024
msgid "If two commits are selected, all commits from BASE to selected (B) and first (A) are included. With Git this is written as `A...B`, `BASE A B` or `BASE..A BASE..B`."
msgstr ""

#: ../settings.rst:1027
msgid "Example where one commit differs for two branches (but the branches have identical information)."
msgstr ""

#: ../settings.rst:1031
msgid "If two ranges are selected with four selected commits (where the number indicates the click order) `A1..A2 B3..B4` where `BASE` is parent to `A1` and `B3` as well as `A1` is a parent to `A2` and `B3` is a parent to `B4`. Note that `A2` is considered as first selected commit in the diff."
msgstr ""

#: ../settings.rst:1036
msgid "Example where only two of the commits are compared."
msgstr ""

#: ../settings.rst:1042
msgid "Git Extensions uses the default Git GUI diff and merge tool in :ref:`settings-config`. This setting enables a submenu for many diff and merge tool menus with all tools known by Git. This enables use of specific tools in certain situations like using `TortoiseGitIDiff` specifically for images."
msgstr ""

#: ../settings.rst:1051
msgid "For :ref:`settings-wsl-git-notes` the Windows Git version is always used for diff and merge tools so the same tools is available in WSL as in Windows."
msgstr ""

#: ../settings.rst:1056
msgid "Position for ruler in TextEditor controls. Set to 0 to disable. (This should be moved to the TextEditor context menu.)"
msgstr ""

#: ../settings.rst:1060
msgid "ssh"
msgstr ""

#: ../settings.rst:1061
msgid "This page allows you to configure the SSH client you want Git to use. Git Extensions is optimized for PuTTY. Git Extensions will show command line dialogs if you do not use PuTTY and user input is required (unless you have configured SSH to use authentication with key instead of password). Git Extensions can load SSH keys for PuTTY when needed."
msgstr ""

#: ../settings.rst:1069
msgid "Use PuTTY as SSH client."
msgstr ""

#: ../settings.rst:1073
msgid "Use OpenSSH as SSH client."
msgstr ""

#: ../settings.rst:1077
msgid "Use another SSH client. Enter the path to the SSH client you wish to use."
msgstr ""

#: ../settings.rst:1081
msgid "For PuTTY, the paths to the executable must be specified."
msgstr ""

#: ../settings.rst:1085
msgid "Enter the path to the plink.exe executable."
msgstr ""

#: ../settings.rst:1089
msgid "Enter the path to the puttygen.exe executable."
msgstr ""

#: ../settings.rst:1093
msgid "Enter the path to the pageant.exe executable."
msgstr ""

#: ../settings.rst:1097
msgid "If an SSH key has been configured, then when accessing a remote repository the key will automatically be used by the SSH client if this is checked."
msgstr ""

#: ../settings.rst:1100
msgid "Git"
msgstr ""

#: ../settings.rst:1102
msgid "The settings that are used by Git are stored in the configuration files of Git. The global settings are stored in the file called ``.gitconfig`` in the user directory. The local settings are stored in the ``.git\\config`` file of the repository."
msgstr ""

#: ../settings.rst:1106
msgid "paths"
msgstr ""

#: ../settings.rst:1107
msgid "This page contains the settings needed to access git repositories. The repositories will be accessed using external tools. For Windows usually \"Git for Windows\" is used. Git Extensions will try to configure these settings automatically."
msgstr ""

#: ../settings.rst:1115
msgid "Needed for Git Extensions to run Git commands. Set the full command used to run git (\"Git for Windows\"). Use the ``Browse`` button to find the executable on your file system. (Cygwin Git may work but is not officially supported.)"
msgstr ""

#: ../settings.rst:1122
msgid "A few Linux tools are used by Git Extensions. When Git for Windows is installed, these tools are located in the bin directory of Git for Windows. Use the ``Browse`` button to find the directory on your file system. Leave empty when it is in the path."
msgstr ""

#: ../settings.rst:1131
msgid "This button opens a dialog where the HOME directory can be changed. The global configuration file used by git will be put in the HOME directory. On some systems the home directory is not set or is pointed to a network drive. Git Extensions will try to detect the optimal setting for your environment. When there is already a global git configuration file, this location will be used. If you need to relocate the home directory for git, click the ``Change HOME`` button to change this setting. Otherwise leave this setting as the default."
msgstr ""

#: ../settings.rst:1140
msgid "For Git repos stored in ``\\\\wsl$`` directories, Git Extensions executes the WSL Git executable where possible to improve performance. WSL Git is several times faster than Windows Git (native) application."
msgstr ""

#: ../settings.rst:1143
msgid "The paths internal to Git Extensions are always in Windows format. Therefore, paths in both inputs and outputs for WSL Git commands must be translated. For instance ``\\\\wsl$\\Ubuntu\\repo`` to ``/repo`` and ``c:\\repo`` to ``/mnt/c/repo``."
msgstr ""

#: ../settings.rst:1147
msgid "The Git Extensions Windows (native) Git executable is still used for the following:"
msgstr ""

#: ../settings.rst:1149
msgid "All handling and settings related to Git in Settings. This includes display of Git version as well. However, if the WSL Git version is too old to be supported, Git Extensions will report this in a popup."
msgstr ""

#: ../settings.rst:1151
msgid "Custom merge implementation in FormResolveConflicts."
msgstr ""

#: ../settings.rst:1152
msgid "Custom difftool/mergetool list, see :ref:`settings-diff-viewer-show-all-available-difftools-difftool-wsl-git`."
msgstr ""

#: ../settings.rst:1153
msgid "ScriptRunner and some built-in plugins like FindLargeFiles always use Windows Git."
msgstr ""

#: ../settings.rst:1155
msgid "Some notes: - Git repos accessed in ``\\\\wsl.localhost`` or mapped to a drive letter will not use the special WSL handling but Windows Git. - Files modified in WSL are not reported by Windows FileSystemWatcher, so the GitStatusMonitor will only report issues at explicit refresh and every minute. - The WSL executable occasionally fail (for instance when the WSL machine is busy) which will be seen as a Git failure that will result in a popup. You may have to ignore the popup, refresh or even reopen the application to recover from these failures."
msgstr ""

#: ../settings.rst:1163
msgid "See also :ref:`worktrees` for other limitations."
msgstr ""

#: ../settings.rst:1166
msgid "config"
msgstr ""

#: ../settings.rst:1167
msgid "This page contains some of the settings of Git that are used by and therefore can be changed from within Git Extensions. If you change a Git setting from the Git command line using ``git config`` then the same change in setting can be seen inside Git Extensions."
msgstr ""

#: ../settings.rst:1171
msgid "If you change a Git setting from inside Git Extensions then that change can be seen using ``git config --get``. Git configuration can be global or local configuration. Global configuration applies to all repositories. Local configuration overrides the global configuration for the current repository."
msgstr ""

#: ../settings.rst:1177
msgid "User name shown in commits and patches."
msgstr ""

#: ../settings.rst:1181
msgid "User email shown in commits and patches."
msgstr ""

#: ../settings.rst:1185
msgid "Editor that git.exe opens (e.g. for editing commit message). This is not used by Git Extensions, only when you call git.exe from the command line. By default Git will use the built in editor."
msgstr ""

#: ../settings.rst:1191
msgid "Merge tool used to solve merge conflicts. Git Extensions will search for common merge tools on your system."
msgstr ""

#: ../settings.rst:1195
msgid "Path to merge tool. Git Extensions will search for common merge tools on your system."
msgstr ""

#: ../settings.rst:1199
msgid "Command that Git uses to start the merge tool. Git Extensions will try to set this automatically when a merge tool is chosen. This setting can be left empty when Git supports the mergetool (e.g. kdiff3)."
msgstr ""

#: ../settings.rst:1204
msgid "Diff tool that is used to show differences between source files. Git Extensions will search for common diff tools on your system."
msgstr ""

#: ../settings.rst:1208
msgid "The path to the diff tool. Git Extensions will search for common diff tools on your system."
msgstr ""

#: ../settings.rst:1212
msgid "Command that Git uses to start the diff tool. This setting should only be filled in when Git doesn’t support the diff tool."
msgstr ""

#: ../settings.rst:1216
msgid "A path to a file whose contents are used to pre-populate the commit message in the commit dialog."
msgstr ""

#: ../settings.rst:1222
msgid "Choose how git should handle line endings when checking out and checking in files. Refer to https://help.github.com/articles/dealing-with-line-endings/#platform-all"
msgstr ""

#: ../settings.rst:1227
msgid "The default encoding for files content."
msgstr ""

#: ../settings.rst:1231
msgid "Various settings for Git."
msgstr ""

#: ../settings.rst:1234
msgid "Plugins"
msgstr ""

#: ../settings.rst:1236
msgid "Plugins provide extra functionality for Git Extensions. Please refer to :ref:`plugins`."
msgstr ""
