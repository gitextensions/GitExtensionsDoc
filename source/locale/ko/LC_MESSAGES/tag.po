# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, GitExtensions
# This file is distributed under the same license as the GitExtensions package.
# 
# Translators:
# 임지윤 <dtrlml26@ajou.ac.kr>, 2020
# LEE Hwanyong <hwan@ajou.ac.kr>, 2023
msgid ""
msgstr ""
"Project-Id-Version: Git Extensions Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-24 23:16+0300\n"
"PO-Revision-Date: 2015-05-24 19:20+0000\n"
"Last-Translator: LEE Hwanyong <hwan@ajou.ac.kr>, 2023\n"
"Language-Team: Korean (http://app.transifex.com/git-extensions/git-extensions-manual/language/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ..\tag.rst:2
msgid "Tag"
msgstr "태그"

#: ..\tag.rst:4
msgid ""
"Tags are used to mark a specific version. Usually a tag will not be moved "
"anymore. The image below shows the commit log of Git Extensions with two "
"tags indicating version [1.08] and [1.06]."
msgstr "태그는 특정 버전을 표시하는 데 사용됩니다. 보통 태그는 더 이상 이동되지 않습니다. 아래 이미지는 버전 [1.08] 및 [1.06]을 나타내는 두 개의 태그가 있는 깃 익스텐션의 커미트 로그를 보여줍니다."

#: ..\tag.rst:10
msgid "Create tag"
msgstr "태그 생성"

#: ..\tag.rst:12
msgid ""
"In Git Extensions you can tag a revision by choosing ``Create new tag`` in "
"the commit log context menu. A dialog will prompt for the name of the tag. "
"You can also choose ``Create tag`` from the ``Commands`` menu, which will "
"show a dialog to choose the revision and enter the tag name."
msgstr "깃 익스텐션에서는 커미트 로그 상황 메뉴에서 \"새 태그 생성\" 을 선택하여 개정에 태그를 지정할 수 있습니다. 태그 이름을 묻는 대화 상자가 나타납니다. 또한 \"명령\" 메뉴에서 \"태그 생성\"을 선택하면 개정을 선택하고 태그 이름을 입력하는 대화 상자가 표시됩니다.\n "

#: ..\tag.rst:18
msgid ""
"Once a tag is created, it cannot be moved again. You need to delete the tag "
"and create it again to move it."
msgstr "일단 태그가 생성되면 다시 이동할 수 없습니다. 태그를 이동하려면 삭제하고 다시 만들어야합니다."

#: ..\tag.rst:21
msgid "Delete tag"
msgstr "태그 삭제"

#: ..\tag.rst:23
msgid ""
"For some operation it is very useful to create tags for temporary usage. Git"
" uses SHA1 hashes to name each commit. When you want to merge with an "
"unnamed branch it is good practise to tag the unnamed branch, merge with the"
" tag and then delete the tag again."
msgstr "일부 작업의 경우 임시 사용을 위한 태그를 생성하는 것은 매우 유용합니다. 깃은 SHA1 해시를 사용하여 각 커미트의 이름을 지정합니다. 명명되지 않은 브랜치와 병합하려면 명명되지 않은 브랜치에 태그를 지정하고 태그와 병합한 다음 태그를 다시 삭제하는 것이 좋습니다."

#: ..\tag.rst:30
msgid "Re-Tag?"
msgstr "다시 태그하시겠습니까?"

#: ..\tag.rst:32
msgid ""
"Read about \"What should you do when you tag a wrong commit and you would "
"want to re-tag?\" here: "
"https://www.kernel.org/pub/software/scm/git/docs/git-tag.html#_on_re_tagging"
msgstr "\"잘못된 커미트에 태그를 지정하여 다시 태그를 지정하려면 어떻게 해야 합니까?\" 에 대해 쓰여있습니다. 여기 : https://www.kernel.org/pub/software/scm/git/docs/git-tag.html#_on_re_tagging"
