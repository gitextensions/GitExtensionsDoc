# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, GitExtensions
# This file is distributed under the same license as the GitExtensions package.
# 
# Translators:
# Alex, 2023
# Eugenio Avila <avilamqz@hotmail.com>, 2017
# María Inés Parnisari <maineparnisari@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Git Extensions Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-24 23:16+0300\n"
"PO-Revision-Date: 2015-05-24 19:18+0000\n"
"Last-Translator: Alex, 2023\n"
"Language-Team: Spanish (http://app.transifex.com/git-extensions/git-extensions-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ..\maintenance.rst:2
msgid "Maintenance"
msgstr "Mantenimiento"

#: ..\maintenance.rst:4
msgid ""
"In this chapter some of the functions to maintain a repository are "
"discussed."
msgstr "En este capitulo se discuten varias de la funciones para mantener un repositorio."

#: ..\maintenance.rst:7
msgid "Compress Git database"
msgstr "Comprimir base datos Git"

#: ..\maintenance.rst:9
msgid ""
"Git will create a lot of files. You can run the ``Compress git database`` to"
" pack all small files building up a repository into one big file. Git will "
"also garbage collect all unused objects that are older then 15 days. When a "
"database is fragmented into a many small files compressing the database can "
"increase performance."
msgstr "Gir puede crear muchos archivos. Puedes usar ``Comprimir base de datos git`` para empaquetar los archivos pequeños creando un repositorio más grande. Git puede recopilar todos los objetos sin usar que tengan 15 días. Cuando una base de datos esta fragmentada en partes pequeñas, la base de datos puede mejorar el rendimiento."

#: ..\maintenance.rst:16
msgid "Recover lost objects"
msgstr "Recuperar objetos perdidos"

#: ..\maintenance.rst:18
msgid ""
"If you accidently deleted a commit you can try to recover it using the "
"``Recover lost objects`` function. A dialog will show you all dangling "
"objects and will allow you to review and recover them."
msgstr ""

#: ..\maintenance.rst:23
msgid ""
"Normally Git will not delete files right away when you remove something from"
" your repository. The reason for this is that you can restore deleted items "
"if you need to. Git will delete removed items when they are older then 15 "
"days and you run ``Compress git database``."
msgstr ""

#: ..\maintenance.rst:29
msgid ""
"There are several functions to help you find the lost items. By default Git "
"Extensions will only show commits. To show all items, just uncheck the "
"``Show only commits`` option. The other options can be checked/unchecked to "
"get more/less results. Double-click on on item to view the content. When you"
" located the item you want to recover you can tag it using the ``Tag "
"selected object`` button."
msgstr ""

#: ..\maintenance.rst:34
msgid ""
"Git Extensions also is able to tag all lost objects. Doing this will make "
"all lost objects visible again making it very easy to locate the commit(s) "
"you would like to recover. After recovering a commit using the ``Tag all "
"lost commits`` button, you can remove all tags using the ``Delete all "
"LOST_AND_FOUND tags`` button."
msgstr ""

#: ..\maintenance.rst:41
msgid "Fix user names"
msgstr "Arreglar nombres de usuario"

#: ..\maintenance.rst:43
msgid ""
"When someone accidentally committed using a wrong username this can be fixed"
" using the ``Edit .mailmap`` function. Git will use the username for an "
"email address when it is set in the ``.mailmap`` file."
msgstr "Cuando alguien accidentalmente hace un commit usando un usuario incorrecto, se puede arreglar usando la función ``Editar .mailmap``. Git usa el nombre de usuario para una dirección email cuando se establece en el archivo ``.mailmap``"

#: ..\maintenance.rst:48
msgid "Fix user name using commit email:"
msgstr "Arreglar nombre de usuario usando el email de commit:"

#: ..\maintenance.rst:54
msgid "Fix email address using commit email:"
msgstr "Arreglar dirección de email usando el email del commit:"

#: ..\maintenance.rst:60
msgid "Fix email address and name using commit email:"
msgstr "Arreglar dirección de email y nombre usando el email del commit:"

#: ..\maintenance.rst:66
msgid "Fix email address and name using commit name and email:"
msgstr "Arreglar dirección de email y nombre usando el nombre y email del commit:"

#: ..\maintenance.rst:73
msgid "Ignore files"
msgstr "Ignorar archivos"

#: ..\maintenance.rst:75
msgid ""
"Git will track all files that are in the working directory. Normally you do "
"not want to exclude all files that are created by the compiler. You can add "
"files that should be ignored to the .gitignore file. You can use wildcards "
"and regular expressions. All entries are case sensitive. The button ``Add "
"default ignores`` will add files that should be ignored when using Visual "
"Studio."
msgstr "Git puede seguir todos los ficheros que estén en el directorio de trabajo. Normalmente no se suele excluir archivos que están creados por el compilador. Puedes añadir archivos que son ignorados al archivo .gitignore. Puedes usar comodines y expresiones regulares. Todas las entradas son sensibles a mayúsculas. El botón 'Añadir ignorados por defecto' añade los archivos que son ignorados cuando se usa Visual Studio."

#: ..\maintenance.rst:81
msgid "A short overview of the syntax:"
msgstr "Una breve descripción de la sintaxis:"

#: ..\maintenance.rst:84
msgid "#"
msgstr "#"

#: ..\maintenance.rst:84
msgid "Lines started with ``#`` are handled as comments"
msgstr "Las lineas que inician con ``#`` son manejadas como comentarios "

#: ..\maintenance.rst:86
msgid "!"
msgstr "!"

#: ..\maintenance.rst:86
msgid "Lines started with ``!`` are exclude patterns"
msgstr "Las líneas que empiezan por  ``!`` son patrones de exclusión"

#: ..\maintenance.rst:88
msgid "[Dd]"
msgstr "[Dd]"

#: ..\maintenance.rst:88
msgid "Characters inside ``[..]`` means that 1 of the characters must match"
msgstr "Los caracteres dentro de ``[..]`` indica que 1 de los caracteres debe de coincidir. "

#: ..\maintenance.rst:90
msgid "\\*"
msgstr "\\*"

#: ..\maintenance.rst:90
msgid "Wildcard"
msgstr "Comodin"

#: ..\maintenance.rst:92 ..\maintenance.rst:95
msgid "/"
msgstr "/"

#: ..\maintenance.rst:92
msgid ""
"A leading slash matches the beginning of the pathname; for example, ``/*.c``"
" matches ``cat-file.c`` but not ``mozilla-sha1/sha1.c``"
msgstr "Una barra inicial que esté al inicio de la ruta ; por ejemplo, ``/*.c`` coincide con ``cat-file.c`` pero no con ``mozilla-sha1/sha1.c``"

#: ..\maintenance.rst:95
msgid ""
"If the pattern ends with a slash, it is removed for the purpose of the "
"following description, but it would only find a match with a directory. In "
"other words, foo/ will match a directory foo and paths underneath it, but "
"will not match a regular file or a symbolic link foo (this is consistent "
"with the way how pathspec works in general in git)."
msgstr ""

#: ..\maintenance.rst:100
msgid ""
"For more `detailed information "
"<http://www.kernel.org/pub/software/scm/git/docs/gitignore.html>`_."
msgstr "Para más información `detallada <http://www.kernel.org/pub/software/scm/git/docs/gitignore.html>`_."
